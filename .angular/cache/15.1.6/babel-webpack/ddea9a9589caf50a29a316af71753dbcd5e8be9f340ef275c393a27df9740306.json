{"ast":null,"code":"import { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/quiz-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../change-bg.directive\";\nfunction QuizComponent_ng_container_10_ol_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ol\")(1, \"li\", 23);\n    i0.ɵɵlistener(\"click\", function QuizComponent_ng_container_10_ol_18_Template_li_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const option_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.answer(ctx_r4.currentQuestion + 1, option_r3));\n    });\n    i0.ɵɵelementStart(2, \"div\", 24);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"isCorrect\", option_r3.correct);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r3.text, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"width\": a0\n  };\n};\nfunction QuizComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 9)(2, \"div\", 10)(3, \"h5\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 11)(6, \"span\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 12)(9, \"h5\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 13);\n    i0.ɵɵelement(12, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 15)(14, \"div\", 1)(15, \"h3\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\", 16);\n    i0.ɵɵtemplate(18, QuizComponent_ng_container_10_ol_18_Template, 4, 2, \"ol\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 18)(20, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function QuizComponent_ng_container_10_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.previousQuestion());\n    });\n    i0.ɵɵelementStart(21, \"i\", 20);\n    i0.ɵɵtext(22, \" << Previous\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function QuizComponent_ng_container_10_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.resetQuiz());\n    });\n    i0.ɵɵelementStart(24, \"i\", 21);\n    i0.ɵɵtext(25, \"Reset\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function QuizComponent_ng_container_10_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.nextQuestion());\n    });\n    i0.ɵɵelementStart(27, \"i\", 22);\n    i0.ɵɵtext(28, \"Next >>\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.points, \" Points\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Question \", ctx_r0.currentQuestion + 1, \" of \", ctx_r0.questionList.length, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.counter, \" sec \\u23F1\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(10, _c0, ctx_r0.progress + \"%\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.questionList[ctx_r0.currentQuestion] == null ? null : ctx_r0.questionList[ctx_r0.currentQuestion].questionText);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.questionList[ctx_r0.currentQuestion] == null ? null : ctx_r0.questionList[ctx_r0.currentQuestion].options);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.currentQuestion === 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.currentQuestion >= 0 || ctx_r0.currentQuestion <= 5);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.currentQuestion >= ctx_r0.questionList.length - 1);\n  }\n}\nfunction QuizComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵelement(2, \"img\", 26);\n    i0.ɵɵelementStart(3, \"div\", 27)(4, \"h3\");\n    i0.ɵɵtext(5, \"Congratulations! \");\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵtext(7, \"You have completed the test. \");\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵtext(9, \"Below is your result:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"p\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵtextInterpolate1(\"Total Question Attempted : \", ctx_r1.questionList.length, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total Correct Answered : \", ctx_r1.correctAnswer, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total Wrong Answered : \", ctx_r1.inCorrectAnswer, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Your points scored : \", ctx_r1.points, \" Points \");\n  }\n}\nexport class QuizComponent {\n  // Injecting Service to the Quiz component.\n  constructor(quizService) {\n    this.quizService = quizService;\n    // variable declartion\n    this.name = '';\n    this.questionList = [];\n    this.currentQuestion = 0;\n    this.points = 0;\n    this.counter = 60;\n    this.correctAnswer = 0;\n    this.inCorrectAnswer = 0;\n    this.progress = '0';\n    this.isQuizCompleted = false;\n  }\n  // Intialization before rendering\n  ngOnInit() {\n    this.name = localStorage.getItem('name');\n    this.getAllQuestions();\n    this.startCounter();\n  }\n  // Fetching quiz from the API and adding to array\n  getAllQuestions() {\n    this.quizService.getQuestionJson().subscribe(res => {\n      this.questionList = res.questions;\n    });\n  }\n  // Next question\n  nextQuestion() {\n    if (!(this.questionList.length - 1 == this.currentQuestion)) {\n      this.currentQuestion++;\n      this.startCounter();\n    } else {}\n  }\n  // Previous question\n  previousQuestion() {\n    if (this.currentQuestion !== 0) {\n      this.currentQuestion--;\n    }\n  }\n  // answer with parameter of question and their options.\n  answer(currentQno, option) {\n    if (currentQno === this.questionList.length) {\n      this.isQuizCompleted = true;\n      this.stopCounter();\n    }\n    // if the answer is correct\n    if (option.correct) {\n      this.correctAnswer++; // correct answer count + 1\n      setTimeout(() => {\n        this.currentQuestion++; // increase question count + 1\n        this.resetCounter(); // reset timer\n        this.getProgressPercent(); // increase progressbar %\n      }, 1000);\n      this.points += 1; // increase by 5 points\n    }\n    // if wrong answer selected\n    else {\n      setTimeout(() => {\n        this.currentQuestion++; // move to next question\n        this.inCorrectAnswer++; // incorrect count + 1\n        this.resetCounter(); // reset time\n        this.getProgressPercent(); // increase progressbar %\n      }, 1000);\n      this.points -= 1; // substract 5 points\n    }\n  }\n  // Start counter\n  startCounter() {\n    this.interval$ = interval(1000) // interval is 1 sec\n    .subscribe(val => {\n      this.counter--; // decrease 20 sec to 0sec\n      if (this.counter == 0) {\n        this.currentQuestion++; //increase question count + 1\n        this.counter = 60; // timer for 20 sec\n        this.points -= 1; // if not answered within 20 sec it will take minus points\n      }\n    });\n\n    setTimeout(() => {\n      this.interval$.unsubscribe(); // idle time limit for 10sec\n    }, 200000);\n  }\n  // stop counter\n  stopCounter() {\n    this.interval$.unsubscribe();\n    this.counter = 0;\n  }\n  // reset counter\n  resetCounter() {\n    this.stopCounter();\n    this.counter = 60;\n    this.startCounter();\n  }\n  // reset question - starts from beginning again\n  resetQuiz() {\n    this.resetCounter();\n    this.getAllQuestions();\n    this.points = 0;\n    this.counter = 60;\n    this.currentQuestion = 0;\n    this.progress = '0';\n  }\n  // progressbar status\n  getProgressPercent() {\n    this.progress = (this.currentQuestion / this.questionList.length * 100).toString();\n    return this.progress;\n  }\n}\nQuizComponent.ɵfac = function QuizComponent_Factory(t) {\n  return new (t || QuizComponent)(i0.ɵɵdirectiveInject(i1.QuizService));\n};\nQuizComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuizComponent,\n  selectors: [[\"app-quiz\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[1, \"container\", \"mt-5\", \"mb-5\"], [1, \"card\"], [1, \"d-flex\", \"justify-content-between\", \"p-3\"], [1, \"image\"], [\"src\", \"/assets/images/logo.png\", \"width\", \"90\", \"alt\", \"logo\"], [1, \"quiz-header\"], [2, \"font-family\", \"cursive\"], [2, \"font-style\", \"italic\"], [4, \"ngIf\"], [1, \"d-flex\", \"justify-content-around\", \"py-3\"], [1, \"score\"], [1, \"question-remain\"], [1, \"timer\"], [1, \"progress\", \"mb-3\"], [\"role\", \"progressbar\", \"aria-valuenow\", \"25\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-striped\", \"bg-info\", \"progress-bar-animated\", 3, \"ngStyle\"], [1, \"question\"], [1, \"options\"], [4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"btn\", 3, \"disabled\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"text-primary\", \"fa-chevron-left\", \"fa-3x\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-refresh\", \"text-primary\", \"fa-3x\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"text-primary\", \"fa-chevron-right\", \"fa-3x\"], [3, \"click\"], [\"appChangeBg\", \"\", 1, \"card\", 3, \"isCorrect\"], [1, \"row\", \"d-flex\", \"justify-content-between\"], [\"src\", \"/assets/images/celebrations.PNG\", \"alt\", \"\", 1, \"img-fluid\", \"col-sm-12\", \"mx-auto\", 2, \"width\", \"50%\"], [1, \"result\", \"text-center\", \"col-md-6\", \"col-sm-12\"]],\n  template: function QuizComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"h4\", 6);\n      i0.ɵɵtext(7, \"Online Tests App.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"span\", 7);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(10, QuizComponent_ng_container_10_Template, 29, 12, \"ng-container\", 8);\n      i0.ɵɵtemplate(11, QuizComponent_ng_container_11_Template, 19, 4, \"ng-container\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate1(\"Welcome \", ctx.name, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isQuizCompleted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isQuizCompleted);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgStyle, i3.ChangeBgDirective],\n  styles: [\".card[_ngcontent-%COMP%] {\\n  max-width: 1052px;\\n  margin: 0 auto;\\n  padding: 10px;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n  cursor: pointer;\\n  margin: 10px 0;\\n}\\n\\nli[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:hover {\\n  border: 1px solid blue;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  padding: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9xdWl6L3F1aXouY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsYUFBYTtBQUNmOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGVBQWU7RUFDZixjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsVUFBVTtBQUNaIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xuICBtYXgtd2lkdGg6IDEwNTJweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDEwcHg7XG59XG5cbmxpIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG1hcmdpbjogMTBweCAwO1xufVxuXG5saSAuY2FyZDpob3ZlciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsdWU7XG59XG5cbnVsIHtcbiAgcGFkZGluZzogMDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["interval","i0","QuizComponent","constructor","quizService","ngOnInit","name","localStorage","getItem","getAllQuestions","startCounter","getQuestionJson","subscribe","res","questionList","questions","nextQuestion","length","currentQuestion","previousQuestion","answer","currentQno","option","isQuizCompleted","stopCounter","correct","correctAnswer","setTimeout","resetCounter","getProgressPercent","points","inCorrectAnswer","interval$","val","counter","unsubscribe","resetQuiz","progress","toString","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Sam\\Desktop\\Online-Test-App-main\\online-tests-app\\src\\app\\components\\quiz\\quiz.component.ts","C:\\Users\\Sam\\Desktop\\Online-Test-App-main\\online-tests-app\\src\\app\\components\\quiz\\quiz.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { QuizService } from 'src/app/services/quiz-service.service';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css'],\n})\nexport class QuizComponent implements OnInit {\n  // variable declartion\n  public name: string = '';\n  public questionList: any = [];\n  public currentQuestion: number = 0;\n  public points: number = 0;\n  counter = 60;\n  correctAnswer: number = 0;\n  inCorrectAnswer: number = 0;\n  interval$: any;\n  progress: string = '0';\n  isQuizCompleted: boolean = false;\n  // Injecting Service to the Quiz component.\n  constructor(private quizService: QuizService) {}\n\n  // Intialization before rendering\n  ngOnInit(): void {\n    this.name = localStorage.getItem('name')!;\n    this.getAllQuestions();\n    this.startCounter();\n  }\n  // Fetching quiz from the API and adding to array\n  getAllQuestions() {\n    this.quizService\n      .getQuestionJson()\n      .subscribe((res: { questions: any }) => {\n        this.questionList = res.questions;\n      });\n  }\n  // Next question\n  nextQuestion() {\n    if(!(this.questionList.length - 1 == this.currentQuestion)){\n      this.currentQuestion++;\n      this.startCounter();\n    }else{\n\n    }\n\n  }\n  // Previous question\n  previousQuestion() {\n    if(this.currentQuestion !== 0){\n      this.currentQuestion--;\n    }\n\n  }\n\n  // answer with parameter of question and their options.\n  answer(currentQno: number, option: any) {\n    if (currentQno === this.questionList.length) {\n      this.isQuizCompleted = true;\n      this.stopCounter();\n    }\n    // if the answer is correct\n    if (option.correct) {\n      this.correctAnswer++; // correct answer count + 1\n      setTimeout(() => {\n        this.currentQuestion++; // increase question count + 1\n        this.resetCounter(); // reset timer\n        this.getProgressPercent(); // increase progressbar %\n      }, 1000);\n\n      this.points += 1; // increase by 5 points\n    }\n    // if wrong answer selected\n    else {\n      setTimeout(() => {\n        this.currentQuestion++; // move to next question\n        this.inCorrectAnswer++; // incorrect count + 1\n        this.resetCounter(); // reset time\n        this.getProgressPercent(); // increase progressbar %\n      }, 1000);\n\n      this.points -= 1; // substract 5 points\n    }\n  }\n  // Start counter\n  startCounter() {\n    this.interval$ = interval(1000) // interval is 1 sec\n      .subscribe((val) => {\n        this.counter--; // decrease 20 sec to 0sec\n        if (this.counter == 0) {\n          this.currentQuestion++; //increase question count + 1\n          this.counter = 60; // timer for 20 sec\n          this.points -= 1; // if not answered within 20 sec it will take minus points\n        }\n      });\n    setTimeout(() => {\n      this.interval$.unsubscribe(); // idle time limit for 10sec\n    }, 200000);\n  }\n  // stop counter\n  stopCounter() {\n    this.interval$.unsubscribe();\n    this.counter = 0;\n  }\n  // reset counter\n  resetCounter() {\n    this.stopCounter();\n    this.counter = 60;\n    this.startCounter();\n  }\n  // reset question - starts from beginning again\n  resetQuiz() {\n    this.resetCounter();\n    this.getAllQuestions();\n    this.points = 0;\n    this.counter = 60;\n    this.currentQuestion = 0;\n    this.progress = '0';\n  }\n  // progressbar status\n  getProgressPercent() {\n    this.progress = (\n      (this.currentQuestion / this.questionList.length) *\n      100\n    ).toString();\n    return this.progress;\n  }\n}\n","<div class=\"container mt-5 mb-5\">\n  <div class=\"card\">\n    <div class=\"d-flex justify-content-between p-3\">\n      <div class=\"image\">\n        <img\n          src=\"/assets/images/logo.png\"\n          width=\"90\" alt=\"logo\">\n      </div>\n      <div class=\"quiz-header\">\n        <h4 style=\"font-family: cursive;\">Online Tests App.</h4>\n        <span style=\"font-style: italic;\">Welcome {{name}}</span>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"!isQuizCompleted\">\n      <div class=\"d-flex justify-content-around py-3\">\n        <div class=\"score\">\n          <h5>{{points}} Points</h5>\n        </div>\n        <div class=\"question-remain\">\n          <span style=\"font-style: italic;\">Question {{currentQuestion+1}} of {{questionList.length}}</span>\n        </div>\n        <div class=\"timer\">\n          <h5>{{counter}} sec ⏱</h5>\n        </div>\n      </div>\n      <div class=\"progress mb-3\">\n        <div class=\"progress-bar progress-bar-striped bg-info progress-bar-animated\" role=\"progressbar\" [ngStyle]=\"{'width':progress+'%'}\"\n          aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n      </div>\n      <div class=\"question\">\n        <div class=\"card\">\n          <h3>{{questionList[currentQuestion]?.questionText}}</h3>\n        </div>\n      </div>\n      <div class=\"options\">\n        <ol *ngFor=\"let option of questionList[currentQuestion]?.options\">\n          <li (click)=\"answer(currentQuestion+1,option)\">\n            <div appChangeBg [isCorrect]=\"option.correct\" class=\"card\">\n              {{option.text}}\n            </div>\n          </li>\n\n        </ol>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <button [disabled]=\"currentQuestion===0\" class=\"btn\" (click)=\"previousQuestion()\"><i\n            class=\"fa text-primary fa-chevron-left fa-3x\" aria-hidden=\"true\">\n            << Previous</i></button>\n        <button [disabled]=\"currentQuestion>=0 || currentQuestion<=5\" class=\"btn\" (click)=\"resetQuiz()\"><i\n            class=\"fa fa-refresh text-primary fa-3x\" aria-hidden=\"true\">Reset</i></button>\n        <button [disabled]=\"currentQuestion>=questionList.length-1\" class=\"btn\" (click)=\"nextQuestion()\"><i\n            class=\"fa text-primary fa-chevron-right fa-3x\" aria-hidden=\"true\">Next >></i></button>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"isQuizCompleted\">\n      <div class=\"row d-flex justify-content-between\">\n        <img style=\"width: 50%;\" class=\"img-fluid col-sm-12 mx-auto\"\n          src=\"/assets/images/celebrations.PNG\" alt=\"\">\n        <div class=\"result text-center col-md-6 col-sm-12\">\n          <h3>Congratulations! <br>You have completed the test. <br>Below is your result:</h3>\n          <br>\n          <p>Total Question Attempted : {{questionList.length}} </p>\n          <p>Total Correct Answered : {{correctAnswer}} </p>\n          <p>Total Wrong Answered : {{inCorrectAnswer}} </p>\n          <p>Your points scored : {{points}} Points </p>\n        </div>\n      </div>\n    </ng-container>\n\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}